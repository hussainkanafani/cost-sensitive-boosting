{
    "app": {
        "cost_setup": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
        "ratio_setup": [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
        "ratios_cost_setup": [0.1, 0.3, 0.5, 0.7, 0.9],
        "n_experiments_doc": "number of experiments to be done in order to compute the average of the computed measures",
        "n_experiments": 10,
        "imbalance_ratio_doc": "if true, only the measures_vs_ratios will be computed and stored. Otherwise, measures_vs_costs and weights_vs_iterations will be computed and stored",
        "imbalance_ratio": false
    },
    "logger": {
        "name": "Root",
        "verbose": true,
        "format": "%(levelname)s: %(message)s"
    },
    "dataProcessor": {
        "dataDir": "data/processed/",
        "testSetSize": 0.2,
        "datasets": [
            {
                "filename": "hepatitis.data",
                "categorical_features": []
            },
            
            {
                "filename": "breast-cancer.data",
                "categorical_features": ["age","menopause","tumor-size","inv-nodes","node-caps","deg-malig"
                                        ,"breast","breast-quad","irradiat"]
            },
            {
                "filename": "diabetes.csv",
                "categorical_features": []
            },
            {
                "filename": "sick-euthyroid.data",
                "categorical_features": ["sex", "on_thyroxine","query_on_thyroxine",
                                        "on_antithyroid_medication","thyroid_surgery","query_hypothyroid",
                                        "query_hyperthyroid","pregnant","sick","tumor","lithium","goitre",
                                        "tsh_measured", "t3_measured", "tt4_measured", "t4u_measured",
                                        "fti_measured", "tbg_measured"]
            },
            {
                "filename": "bank-additional-full.csv",
                "categorical_features": ["job","marital", "education", "default", "housing", "loan", "contact",
                                        "month", "day_of_week", "poutcome"]
            }
        ]
    },
    "model": {
        "algorithms_doc": "list of possible algorithms [adaboost, adac1, adac2, adac3, adacost]",
        "algorithms": [
            "adaboost",
            "adac1",
            "adac2",
            "adac3",
            "adacost"
        ],
        "base_estimator": "DecisionTreeClassifier",
        "n_estimators_doc": "number of iterations that the algorithm has to do",
        "n_estimators": 10,
        "learning_rate": 1.0
    }
}